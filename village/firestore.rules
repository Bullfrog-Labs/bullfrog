rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function userIsWhitelisted() {
      let twitterId = request.auth.token.firebase.identities["twitter.com"][0];
      let googleId = request.auth.token.firebase.identities["google.com"][0];
      return exists(/databases/$(database)/documents/whitelist/$(twitterId)) || exists(/databases/$(database)/documents/whitelist/$(googleId));
    }

    function userIsAuthd() {
      return request.auth != null;
    }

    function userIdMatches(userId) {
      return request.auth.uid == userId;
    }

    function userIsAuthdAndWhitelisted() {
      return userIsAuthd() && userIsWhitelisted();
    }

    function siteIsPublic() {
      return exists(/databases/$(database)/documents/settings/is_public);
    }

    // from https://firebase.google.com/docs/firestore/security/rules-conditions#authentication
    match /users/{userId} {
      allow read, write: if userIsAuthdAndWhitelisted() && userIdMatches(userId);
    }
    match /users/{userId}/{document=**} {
      allow read, write: if userIsAuthdAndWhitelisted() && userIdMatches(userId);
    }
    match /{path=**}/posts/{postId} {
      allow read: if userIsAuthdAndWhitelisted() || siteIsPublic();
    }
    match /users/{userId} {
      allow read: if userIsAuthdAndWhitelisted() || siteIsPublic();
    }
    match /whitelist/{userId} {
      allow read: if request.auth.token.firebase.identities["twitter.com"][0] == userId || request.auth.token.firebase.identities["google.com"][0] == userId;
    }
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
